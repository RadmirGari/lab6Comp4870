@page "/students/school"
@inject HttpClient Http
@inject IJSRuntime JS

<PageTitle>Students by School</PageTitle>

<button class="btn btn-primary" @onclick="AskForSchool">Get Students by School</button>

@if (students == null)
{
    <p><em>Please click the button above to load students.</em></p>
}
else if (!students.Any())
{
    <p>No students found for the specified school.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Student ID</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>School</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in students)
            {
                <tr>
                    <td>@student.StudentId</td>
                    <td>@student.FirstName</td>
                    <td>@student.LastName</td>
                    <td>@student.School</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Student>? students;

    private async Task AskForSchool()
    {
        // Prompt the user for a school name
        var school = await JS.InvokeAsync<string>("prompt", "Enter a school name:");
        if (!string.IsNullOrWhiteSpace(school))
        {
            // Call the Azure Functions endpoint
            // Make sure your function is actually at /api/students/school/{school}
            students = await Http.GetFromJsonAsync<List<Student>>($"api/students/school/{school}");
        }
    }

    // Inline Student model (no external library needed)
    private class Student
    {
        public int StudentId { get; set; }
        public string? FirstName { get; set; }
        public string? LastName { get; set; }
        public string? School { get; set; }
    }
}
